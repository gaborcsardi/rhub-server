version: '3.3'

volumes:
   uploads-data:
   session-data:
   log-data:
   queue-data:
   jenkins-data:
   artifacts-data:

secrets:
  nginx.crt:
    external: true
  nginx.key:
    external: true
  jenkins.pass:
    file: ./jenkins.pass
  web.pass:
    file: ./web.pass

services:

   frontend:
     build: ./frontend
     image: "rhub/frontend:${RHUB_VERSION}"
     environment:
     - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
     - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
     - JENKINS_URL=http://${JENKINS_USER}:<password>@jenkins:8080/jenkins
     - LOGDB_URL=${LOGDB_URL}
     - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
     - MAILGUN_API_KEY=${MAILGUN_API_KEY}
     - RABBITMQ_URL=${RABBITMQ_URL}
     - REDIS_URL=${REDIS_URL}
     - REDIS_EMAIL_URL=${REDIS_EMAIL_URL}
     - RHUB_ARTIFACTS_URL=${RHUB_ARTIFACTS_URL}
     - RHUB_BUILDER_EXTERNAL_URL=${RHUB_BUILDER_EXTERNAL_URL}
     - RHUB_BUILDER_URL=http://frontend:3000
     - RHUB_EMAIL_FROM=${RHUB_EMAIL_FROM}
     - RHUB_EMAIL_MODE=${RHUB_EMAIL_MODE}
     - RHUB_SMTP_SERVER=${RHUB_SMTP_SERVER}
     - RHUB_SMTP_USERNAME=${RHUB_SMTP_USERNAME}
     - RHUB_SMTP_PASSWORD=${RHUB_SMTP_PASSWORD}
     - RHUB_SMTP_PORT=${RHUB_SMTP_PORT}
     - RHUB_SMTP_TLS_REQUIRED=${RHUB_SMTP_TLS_REQUIRED}
     volumes:
     - uploads-data:/usr/src/app/uploads
     depends_on:
     - redis
     - queue
     - logdb
     - jenkins
     secrets:
     - jenkins.pass

   backend:
     build: ./backend
     image: "rhub/backend:${RHUB_VERSION}"
     environment:
     - RABBITMQ_URL=${RABBITMQ_URL}
     - JENKINS_URL=http://${JENKINS_USER}:<password>@jenkins:8080/jenkins
     - RHUB_ARTIFACTS=${RHUB_ARTIFACTS}
     depends_on:
     - queue
     - jenkins
     secrets:
     - jenkins.pass

   redis:
     image: "redis:4.0.11-alpine"
     volumes:
     - session-data:/data

   queue:
     image: "rabbitmq:3.7.8-alpine"
     volumes:
     - queue-data:/var/lib/rabbitmq

   logdb:
     image: "couchdb:2.2"
     volumes:
     - log-data:/opt/couchdb/data

   logdb-seed:
     build: ./seed
     image: "rhub/seed:${RHUB_VERSION}"
     environment:
     - LOGDB_URL=${LOGDB_URL}
     entrypoint:
     - bash
     - -c
     - /seed/logdb.sh
     depends_on:
     - logdb
     deploy:
       restart_policy:
         condition: on-failure

   jenkins:
     build: ./jenkins
     image: "rhub/jenkins:${RHUB_VERSION}"
     volumes:
     - jenkins-data:/var/jenkins_home
     environment:
     - JENKINS_ROOT_URL=${JENKINS_ROOT_URL}
     - JENKINS_USER=${JENKINS_USER}
     - JENKINS_OPTS="--prefix=/jenkins"
     secrets:
     - jenkins.pass
     ports:
     - 50000:50000

   linux-builder:
     hostname: linux-builder
     build: ./linux-builder
     image: "rhub/linux-builder:${RHUB_VERSION}"
     volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - artifacts-data:/artifacts
     environment:
     - JENKINS_URL=http://jenkins:8080/jenkins
     - JENKINS_USER=${JENKINS_USER}
     - RHUB_EXECUTORS=4
     - JENKINS_LABELS=swarm linux
     - RHUB_CRAN_MIRROR=${RHUB_CRAN_MIRROR}
     - RHUB_ARTIFACTS=${RHUB_ARTIFACTS}
     - RHUB_BUILDER_URL=http://frontend:3000
     secrets:
     - jenkins.pass

   cron:
     build: ./cron
     image: "rhub/cron:${RHUB_VERSION}"
     environment:
     - JENKINS_URL=http://${JENKINS_USER}:<password>@jenkins:8080/jenkins
     secrets:
     - jenkins.pass

   nginx:
     build: ./nginx
     image: "rhub/nginx:${RHUB_VERSION}"
     volumes:
     - artifacts-data:/artifacts:ro
     ports:
     - "80:80"
     - "443:443"
     depends_on:
     - frontend
     - jenkins
     entrypoint:
     - sh
     - -c
     - /entrypoint.sh
